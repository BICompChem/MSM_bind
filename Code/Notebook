{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Prediction of drug fragment binding poses using Molekular Dynamic simulation and Markov State Models (MSM)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook we will show how to use MSM_bind to predict the binding pose of a drug fragment. \n",
    "We will use the bromo domain, which recognizes acetylated lysine residues and is an important target for anti-cancer drugs. The Crystal structure of the bromodomain and the ligand 4'-Hydroxyacetophenone were obtained from the pdb (5cq8).\n",
    "The structure of the fragment is shown in the first figure. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"ligBI_chem.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This notebook has been tested for version 1.0. The MSM_bind package contains a workflow to easily set-up and adjust work flows to generate predictions for the drug fragment binding poses. The package is dependent on other common python packages. Make sure you have all of them installed for the program to work. The packages are:\n",
    "\n",
    "* pyemma 2.3.2 with msmtools of the conda-forge channel\n",
    "* numpy \n",
    "* pylab\n",
    "* scipy\n",
    "* os\n",
    "* subprocess \n",
    "* random \n",
    "* sys\n",
    "* pmx \n",
    "\n",
    "Also the program needs to use Gromacs. After installing all the packages we can proceed with the tutorial."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Load the package and set global variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we load the package and define that the images should be placed inside this notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/lib/python2.7/site-packages/pyemma/__init__.py:91: UserWarning: You are not using the latest release of PyEMMA. Latest is 2.4, you have 2.3.2.\n",
      "  .format(latest=latest, current=current), category=UserWarning)\n"
     ]
    }
   ],
   "source": [
    "##### import functions\n",
    "import numpy as np\n",
    "import MSM_bind\n",
    "\n",
    "%load_ext autoreload\n",
    "%autoreload 1\n",
    "%aimport MSM_bind\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The global variables define where our simulation data is stored (input_xtc1, input_pdb1) and where the output of the program is saved (out_data1). If you have an X-ray reference and want to compare it with the result, set compare to reference to True and define a path for reference1. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "fragment='5cq8'\n",
    "protein='bromo'\n",
    "#folder wehere raw .xtc files are. Only write out the protein and fragment coordinates\n",
    "input_xtc1=['/home/tutorial/example_trajs' ]\n",
    "#path where to find the structure (protein and fragment)\n",
    "input_pdb1='/home/tutorial/example_trajs/prot_mol.pdb'\n",
    "# during the program multiple files will be generated and afterward deleted. They are saved in this folder\n",
    "out_data1='/home/tutorial/out_data' \n",
    "\n",
    "# set to True if you want to compare the results to your X-ray reference \n",
    "compare_results=True\n",
    "#reference path if you want to check to model quality\n",
    "if compare_results:\n",
    "    reference1='/home/tutorial/example_trajs/prot_mol.pdb'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next you have to define the Gromacs version you are using. Lagtime and the number of clusters are important parameters for the Markov State Model. A lagtime of 50 ns and 600 clusters gave good results for most protein/fragment combinations. However, feel free to play around with these values.   \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "gromacs_version1=5\n",
    "lagtime1=20\n",
    "n_clusters1=100"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Load the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then we have to load the trajectories. Therefore you have to define the folder, where the data is located (here input_xtc1). The program will load all .xtc files in this folder. So be careful that no incorrect trajectories lay around in this folder. \n",
    "\n",
    "There are also some additional restrictions on the simulations: The simulation time-step should be 1 ns. The fragment should be named 'MOL'. If you remove the water atoms and only use the protein and fragment coordinates (e.g. with trj_conv), the program will be much faster."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "40\n"
     ]
    }
   ],
   "source": [
    "#first load the unprocessed data (and align it to the structure)\n",
    "load_data=MSM_bind.Load_process_data(input_xtc=input_xtc1, input_pdb=input_pdb1, sim_timestep=1)\n",
    "traj_list= load_data.load_data()\n",
    "structure= load_data.load_structure()\n",
    "\n",
    "# test how many trajectories are loaded\n",
    "print len(traj_list)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cluster the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In order to build the Markov State Model we have to cluster the data. Here we cluster based on structural similarity. You can define the clustering algorithm with the cluster_method option. Possible clustering methods are k_means and uniform_time. \n",
    "\n",
    "The coordinates option defines on which atoms the clustering is performed. Using the 'heteroatom' option, the clustering is performed on the heteroatoms of the ligand. Heteroatoms are often involved in specific binding to the protein. Additionally each fragment only contains a few heteroatoms. Therefore, we have a reduced dimensionality but capture the most important interactions.  \n",
    "Other possibilities are 'contacts' (shortest distance between the ligand and protein atoms). A third option 'prot_frag' is planned, which includes the heteroatom atoms as well as the nearest protein residues.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ea7375027b674b06919990fd93f65401"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "75b55b2527304d01b3bbf18a8012ffcd"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f696205e1dee44adba370b2903a8f7d3"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/tb/stlinker/conda-envs/env_steph/lib/python2.7/site-packages/matplotlib/cbook.py:136: MatplotlibDeprecationWarning: The spectral and spectral_r colormap was deprecated in version 2.0. Use nipy_spectral and nipy_spectral_r instead.\n",
      "  warnings.warn(message, mplDeprecation, stacklevel=1)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nj2DQWEFvjk4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda47e82410>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Then cluster the data\n",
    "clustering_class=MSM_bind.Cluster_data(traj_list, input_pdb=input_pdb1, lagtime=lagtime1, cluster_method='uniform_time', n_clusters=n_clusters1, coordinates='heteroatom', visual=True)\n",
    "clustering_class.get_coordinates()\n",
    "clustering_dict=clustering_class.clustering()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sort the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we remove small clusters and add their content to neighbouring clusters. This ensures that the Markov State Model is well connected. Also all clusters that are further from the protein then 0.5 nm, are lumped into one unbound cluster. If you want, you can skip this step.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4f9de278463948ae8d2ae42ba4b72f9d"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "de69e5823d9e4a6190706c223290b58b"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "eb715344a6724245ba7c6c7df475b255"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Remove small cluster and sort into bound and unbound cluster \n",
    "sorted_clusters=MSM_bind.sort_cluster(clustering_class)\n",
    "sorted_clusters.remove_small_clusters()\n",
    "lesscluster=sorted_clusters.assign_bound_unbound()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Build a Markov state model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we now build the Markov State Model. For further details look at the PyEMMA package. If you want to compare you results to the reference, you can use the testing class. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:51:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/tb/stlinker/conda-envs/env_steph/lib/python2.7/site-packages/matplotlib/axes/_axes.py:545: UserWarning: No labelled objects found. Use label='...' kwarg on individual plots.\n",
      "  warnings.warn(\"No labelled objects found. \"\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda58e2b0d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#build a simple MSM model\n",
    "m=MSM_bind.simple_MSM(clustering_class, lesscluster, out_data=out_data1, lagtime=lagtime1)\n",
    "m.create_MSM()\n",
    "m.get_highest_populated()\n",
    "\n",
    "# compare rmsd to the reference\n",
    "if compare_results:\n",
    "    Testing_mod=MSM_bind.Test_the_model(reference1, m.structure_list )\n",
    "    Testing_mod.compare_to_reference( out_data=out_data1, reference=reference1)\n",
    "    Testing_mod.rmsd_plot(m, 'prob')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The highest ranked structures are saved in the output folder. The centroid of the cluster is called \"simple_MSM_centroid_rank_1.pdb\". The whole cluster is saved as \"simple_msm_most_rank_1.xtc\". You can have a look at them using e.g. pymol. It should look similar to: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"ligBI_chem.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A very quick way for a quality control of the model is to check the survival probability of the highest ranked states. The survival probability is the chance that the fragment stays in the same cluster after one lag time. This is equivalent to the diagonal element of the transition matrix. The closer to 1, the more stable is the state. We expect the correct binding state to be very stable. \n",
    "\n",
    "However, if n_cluster is large the binding state is disrupted into multiple states, which reduces the survival probability. Disrupted states can be detected and but together by kinetic clustering (see below). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rank 1 structure has a survival probability of 0.188\n",
      "Rank 2 structure has a survival probability of 0.159\n",
      "Rank 3 structure has a survival probability of 0.171\n",
      "Rank 4 structure has a survival probability of 0.871\n",
      "Rank 5 structure has a survival probability of 0.136\n"
     ]
    }
   ],
   "source": [
    "# diagonal elemnt of the cluster\n",
    "highest_clusterlist= np.argsort(m.mm_distr)[::-1][:5]\n",
    "rank=1\n",
    "for i in highest_clusterlist:\n",
    "    print \"Rank %i structure has a survival probability of %.3f\" % (rank, m.distr.transition_matrix[i][i])\n",
    "    rank=rank+1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Residence time analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By building the Markov State Model with high lagtimes, we reject some information of the trajectories. One of the most important information is the residence time. Good ligands stay for a long time in the binding pocket. Their residence time usually exceeds the simulation time. Therefore, we check how long the fragment actually stays in its proposed bound state. \n",
    "\n",
    "In order to do so, we use structural similarities, because they are independent of cluster disruption. The residence time analysis tool detect binding and unbinding events, as well as the total binding time. A bonus is granted for binding events (weighted by the binding time) and a malus for unbinding events. Afterwards, the relative score of the top 5 structures is determined and added to the relative score from the Markov state model. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "relative residence time score\n",
      "[ 16.95181526  19.63766778  19.52700905  25.23018955  18.65331835]\n",
      "relative MSM score\n",
      "[ 0.22230423  0.22161172  0.1970435   0.18961092  0.16942963]\n",
      "total score\n",
      "[ 17.17411949  19.8592795   19.72405255  25.41980048  18.82274798]\n"
     ]
    }
   ],
   "source": [
    "#get the quality control ranking\n",
    "list_of_representatives=m.structure_list\n",
    "\n",
    "quality_scoring=MSM_bind.Scoring(list_of_representatives, traj_list=traj_list, out_data=out_data1)\n",
    "quality_scoring.quality_score()\n",
    "#print the relative residence tiem score of the top 5 clusters\n",
    "print \"relative residence time score\"\n",
    "print quality_scoring.rank_quality_control\n",
    "#print the relative MSM score of the top 5 clusters\n",
    "print \"relative MSM score\"\n",
    "print m.prob[:5]/sum(m.prob[:5])\n",
    "#print the total score of the top 5 clusters\n",
    "print \"total score\"\n",
    "total_score=quality_scoring.rank_quality_control+m.prob[:5]/sum(m.prob[:5])\n",
    "print total_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Kinetic clustering"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As discussed above a large number of clusters can lead to the disruption of states into multiple sub-states. Therefore the score of one individual sub-state might be small, but the sum of all connected sub-states might be large. Therefore we perform kinetic clustering on the states to put the connected states back together. We define connected states as states which interchange quickly and are structurally related. \n",
    "\n",
    "Two different methods to do the kinetic clustering are implemented in MSM_bind. The maxtrace algorithm aims to maximize the diagonal values of the transition matrix. Those values are equivalent to the survival probability. The PCCA method is based on the PCCA+ spectral clustering method, which detects the fastest kinetics among subsets. \n",
    "\n",
    "The variable nstates_cg defines how many coarse grained states we aim for. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#initiallize kinetic clustering\n",
    "kinetic_lumping=MSM_bind.Kinetic_clustering(m, out_data=out_data1, PCCA_exclusion_value=0.0, nstates_cg=10)\n",
    "\n",
    "# choose on of the methods below\n",
    "#for maxtrace method\n",
    "#kinetic_lumping.maxtrace_states()\n",
    "\n",
    "#for PCCA method\n",
    "kinetic_lumping.PCCA_states()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition we apply a structural restrain on the sub-states. Subsequently, the clusters are lumped together to form bigger coarse grained clusters.   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[14, 15, 27, 28, 39, 40, 41, 46], [2, 3, 4, 10, 11, 12, 16, 17, 24, 25, 26, 34, 35, 47, 48, 52, 53, 57, 58, 61, 66, 67, 71, 72, 75, 79, 81, 82, 88, 89, 94, 97, 98], [0, 1, 18, 19, 20, 37, 38, 51, 54, 55, 56, 59, 73, 74, 76, 77, 86, 87]]\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_14.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_15.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_27.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_28.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_39.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_40.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_41.pdb\n",
      "06-11-17 15:52:00 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_46.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_2.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_3.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_4.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_10.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_11.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_12.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_16.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_17.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_24.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_25.pdb\n",
      "06-11-17 15:52:02 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_26.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_34.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_35.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_47.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_48.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_52.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_53.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_57.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_58.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_61.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_66.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_67.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_71.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_72.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_75.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_79.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_81.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_82.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_88.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_89.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_94.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_97.pdb\n",
      "06-11-17 15:52:03 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_98.pdb\n",
      "06-11-17 15:52:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_0.pdb\n",
      "06-11-17 15:52:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_1.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_18.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_19.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_20.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_37.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_38.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_51.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_54.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_55.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_56.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_59.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_73.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_74.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_76.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_77.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_86.pdb\n",
      "06-11-17 15:52:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_87.pdb\n",
      "[[27, 39, 41], [14, 15, 28, 40, 46], [2, 3, 4, 10, 11, 12, 16, 17, 24, 25, 26, 34, 35, 47, 53, 58, 66, 67, 71, 72, 79, 81, 82, 88, 89, 94, 97, 98], [0, 1, 18, 19, 20, 37, 38, 51, 54, 55, 56, 59, 73, 74, 76, 77, 86, 87]]\n"
     ]
    }
   ],
   "source": [
    "#select the states that are found in the highest ranked states and are small\n",
    "kinetic_lumping.lump_cluster_max_small()\n",
    "print kinetic_lumping.lumpstates\n",
    "#use an additional restraint on the structure similarity\n",
    "kinetic_lumping.similarity_restraint()\n",
    "print kinetic_lumping.lumpstates\n",
    "#lump the states together to get a new trajectory\n",
    "kinetic_dtraj=kinetic_lumping.lump_states()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Build a new MSM based on the lumped clusters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now build a new Markov state model on the kinetically clustered states."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:52:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nPQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda47ea9650>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# build a new MSM based on the clustered trajectory\n",
    "m_kin=MSM_bind.simple_MSM(clustering_class, kinetic_dtraj, out_data=out_data1, lagtime=40)\n",
    "m_kin.create_MSM()\n",
    "m_kin.get_highest_populated()\n",
    "\n",
    "# test with rmsd\n",
    "if compare_results:\n",
    "    Testing_mod_kin=MSM_bind.Test_the_model(reference1, m_kin.structure_list )\n",
    "    Testing_mod_kin.compare_to_reference(out_data=out_data1, reference=reference1)\n",
    "    Testing_mod_kin.rmsd_plot(m_kin, 'prob')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Additionaly, we can test if the survival probability of the states has incereased"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rank 1 structure has a survival probability of 0.957\n",
      "Rank 2 structure has a survival probability of 0.901\n",
      "Rank 3 structure has a survival probability of 0.632\n",
      "Rank 4 structure has a survival probability of 0.889\n",
      "Rank 5 structure has a survival probability of 0.355\n"
     ]
    }
   ],
   "source": [
    "# diagonal elemnt of the cluster\n",
    "highest_clusterlist= np.argsort(m_kin.mm_distr)[::-1][:5]\n",
    "\n",
    "rank=1\n",
    "for i in highest_clusterlist:\n",
    "    print \"Rank %i structure has a survival probability of %.3f\" % (rank, m_kin.distr.transition_matrix[i][i])\n",
    "    rank=rank+1\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# New residence time analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And performe a new residence time analysis on the lumped states."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "relative residence time score\n",
      "[ 16.06644796  29.10406904  16.32763363  21.72168073  16.78016864]\n"
     ]
    }
   ],
   "source": [
    "#get the quality control ranking of kinetic clustered\n",
    "list_of_representatives_kin=m_kin.structure_list\n",
    "\n",
    "quality_scoring_kin=MSM_bind.Scoring(list_of_representatives_kin, out_data=out_data1, traj_list=traj_list,)\n",
    "quality_scoring_kin.quality_score()\n",
    "print \"relative residence time score\"\n",
    "print quality_scoring_kin.rank_quality_control"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plot scoring"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we plot the total score and the rank. The highest ranked structures are saved in the output folder as \"scoring_rank1.pdb\". Additionally the flexibility of the ligand in the binding pose is tested and saved as a B-factor. A low B-factor is equivalent to a strong bound part. Therefore this can help designing better ligands by keeping strongly bound parts and replacing flexible, unbound parts of the fragment. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nSFLB/h8DQ91a1P75JAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda445ddcd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the scoring and get the B_factor\n",
    "out_sec=MSM_bind.output_section(  out_data=out_data1, input_pdb=input_pdb1,)\n",
    "#always call the B_factor function first\n",
    "out_sec.B_factor(quality_scoring_kin)\n",
    "#after this call the plotting function\n",
    "out_sec.plot_ranking(quality_scoring_kin.rank_quality_control,m_kin)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "B-factor representation:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"ligBI_chem.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Estimation of parameter uncertainty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#initilze bootstrapping module \n",
    "if compare_results:\n",
    "    boot=MSM_bind.integration_and_bootstrapping(out_data=out_data1, reference=reference1)\n",
    "else:\n",
    "    boot=MSM_bind.integration_and_bootstrapping(out_data=out_data1, reference=None)\n",
    "\n",
    "# define parameter space over which we will integrate\n",
    "n_cluster_pos=[100,200]\n",
    "lagtime_pos=[10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b2b41c00993d41928aa8eae690ff3b76"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "be9e49b91515489e948c86c5f83e1fc3"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f7840858dd4447e8aed57a7ba7893dc9"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d0e401dd5d2f4394b188870a165864f9"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b08dd6615f8a4ebe90b1d6f0be27adcc"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "43b39266aebb4b28bd7263fa96984188"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:53:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:53:10 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_14.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_15.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_27.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_28.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_39.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_40.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_41.pdb\n",
      "06-11-17 15:53:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_46.pdb\n",
      "06-11-17 15:53:13 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_2.pdb\n",
      "06-11-17 15:53:13 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_3.pdb\n",
      "06-11-17 15:53:13 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_4.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_10.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_11.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_12.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_16.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_17.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_24.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_25.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_26.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_34.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_35.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_47.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_48.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_52.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_53.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_57.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_58.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_61.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_66.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_67.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_71.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_72.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_75.pdb\n",
      "06-11-17 15:53:14 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_79.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_81.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_82.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_88.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_89.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_94.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_97.pdb\n",
      "06-11-17 15:53:15 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_98.pdb\n",
      "06-11-17 15:53:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_0.pdb\n",
      "06-11-17 15:53:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_1.pdb\n",
      "06-11-17 15:53:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_18.pdb\n",
      "06-11-17 15:53:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_19.pdb\n",
      "06-11-17 15:53:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_20.pdb\n",
      "06-11-17 15:53:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_37.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_38.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_51.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_54.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_55.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_56.pdb\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_59.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_73.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_74.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_76.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_77.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_86.pdb\n",
      "06-11-17 15:53:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_87.pdb\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:53:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda44b35750>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "aa77675aa42e473f8222469d1678d14f"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "affad7dba81c40babd6722588c123b74"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "796a03c5ad54441d91801a24613f526c"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8ba11c0e437041549737cefc2e80a118"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6220fc1c16bf44a9a45810338f910761"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "faae681e58f847f9a5c7251a80f5740e"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:54:25 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_168.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_169.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_26.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_27.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_28.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_29.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_50.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_51.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_52.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_53.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_54.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_73.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_74.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_75.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_76.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_77.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_78.pdb\n",
      "06-11-17 15:54:27 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_87.pdb\n",
      "06-11-17 15:54:35 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_1.pdb\n",
      "06-11-17 15:54:35 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_2.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_3.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_4.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_35.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_36.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_37.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_38.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_39.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_69.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_70.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_71.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_72.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_95.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_96.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_97.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_102.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_103.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_104.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_105.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_106.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_110.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_111.pdb\n",
      "06-11-17 15:54:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_137.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_138.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_139.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_140.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_141.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_142.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_143.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_144.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_145.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_146.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_147.pdb\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_162.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_163.pdb\n",
      "06-11-17 15:54:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_164.pdb\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:55:19 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:55:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYEAAAEPCAYAAACk43iMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3XmcXFWd9/HPN509UYIkLKaBRIPRjMoWEYVBNEECRjsu\n84iD24zKE8cFVFDiPCOo44hCfMKMMhhBo4IyCiFhorKJGcQFSUiGAAFEQOgAEyLZCdn6N3/cU6Ho\ndHXf6q6u6qr6vl+veqXr3nPv/Z0E7q/POfeeo4jAzMya06BaB2BmZrXjJGBm1sScBMzMmpiTgJlZ\nE3MSMDNrYk4CZmZNbHC1LyjpEWAzsBvYFRFTqx2DmZllqp4EkjdGxLoaXdvMzBJ3B5mZNTFV+41h\nSQ8DG8m6g74dEfO7KHMGcAbA8OHDjx4/fjwAj21VyfMePMpvPps1sz/96U/rImJcX87x+te8JjZs\n2pSr7OoHHrghImb05XoDQS26g46PiDWS9gduknRfRNxaXCAlhvkAUyZPjh9ecgntW7Zw/vIW1u/Y\nOxGMHbSTb+/3JzjiCFi5MvuzB0dPm1aZ2pRp8eLFALS1tdXk+pXSKPWAxqlLo9QDelcXSX/u63U3\nbNrEDy+5JFfZqdOnj+3r9QaCqncHRcSa9Oda4FrgmLzHzjykg2GdIh42CE6/9QcMOvvsbMO8eZUK\n1cys4VU1CUgaJekFhZ+BNwN35z1+6rhg9pTBjB0OAsYOh9lTBnPib66lo7U1K5SjFWBmZplqdwcd\nAFwrqXDtH0XE9eWc4ISDBnPCQc8Pu+Oii567+Z91VkUCNbMm9MwzWZdyE6lqEoiIh4DDK37ipUuf\n+9ktATOz3Gr1nkBlrVzJoCVLsi6hBQtqHY2Z1avNm5//S2UTaIwkcNZZdNQ6BjOzOtQYScBdQGZm\nvdIYSQCyR0PPOiv3ewJmZntpwoHhxpk2ovAP5/cEzMxya5wkUHg01I+Impnl1jjdQYUuIHcFmVlv\n7dzJoPb2WkdRVY3TEjAzs7I1TkvAzGyA6WkRLUnnAKenr4OBVwDjIuJpSWOAy4BXAgH8fUT8rtIx\nOgmYmSUChlT+tCUX0YqIC4ELASS9FfhURDyddl8MXB8R75I0FBhZ+dCcBMzMBor3AD8GkLQPcALw\nQYCI2AHs6I+LekzAzKx3xkpaVvQ5o4syAdwsaXmJ/QBIGgnMAK5JmyYCTwHfk7RC0mVp5uWKc0vA\nzCwRZd0U13Xu4+9Cj4toJW8FflPUFTQYOAr4RETcLuli4Fzgn/KHl09jtASa7A0/M6sPZSyidRqp\nKyhpB9oj4vb0/WqypFBxjZEEmmzWPzPrH4WWQJ5Pj+fKuYhW6v9/A7C4sC0ingQekzQ5bZoG3Nu7\nWnWvIZLAqCVLah2CmVlnBwC3Sfpv4A/AzyLiekmzJc0uKvd24MaI2Nrp+E8AV0q6CzgC+Jf+CLIh\nxgQOBu6rdRBmZkVKLaIVEZd2+r4AWNBFuZVAT2MOfdYQSWDUSbWOwMwagYChtQ6iyuq7OygNCG+9\nqcZxmJnVqfpOAmna6CdqHIaZWb2q7+6gNG30xtbWGgdiZo1gENAvb2QNYPXdEihMG+01BMzMeqW+\nk0CBVxMzM+uV+u4OSvZpb2djrYMws7o3CBhe6yCqrCFaAvvWOgAzszrVEEnAzMx6p/67gzweYGYV\n4u6gOjTI8waZmfVafbcEVq6kY+ZMcCIws0oYCi3jc5Z9uF8jqZr6bgkccQScdRZP1ToOM7M6Vd9J\nINk6c2atQzAz24ukRyStkrRS0rIu9r9c0u8kbZd0dtH2gyX9StK9ku6RdGZ/xVjf3UEFfmPYzCph\nGDApZ9n83UFvjIh1JfY9DXwSmNVp+y7gMxFxZ1qYZrmkmyKi4gvLNERLwMysHkXE2oi4A9jZafsT\nEXFn+nkzsBrIO1pRFicBM7PeGStpWdHnjC7KBHCzpOUl9vdI0gTgSOD27kv2Tl13Bw2bPp3tN99c\n6zDMrFEMJ3930E2si4ieVv46PiLWSNofuEnSfRFxa95wJI0GrgHOiohNeY8rR01aApJaJK2Q1Kdn\nO7cXppBOi8vYcxatWMNxF9zCxHN/xnEX3MKiFWtqHZJZ04mINenPtcC1wDF5j5U0hCwBXBkRC/sn\nwtp1B51J1sfVN2lAeNjZZ/dQsLksWrGGOQtXsWbDNgJYs2EbcxauciIwqyJJo9KgLpJGAW8G7s55\nrIDLgdUR8Y3+ixIUEf15/r0vKLUC3we+Anw6Irp9vnPSpEkxd+7cqsTWKM5f3sL6Hdpr+75Dg/OP\n3l2DiMz636xZs5bn6J7p1tSDFcs+la+sPkO315P0ErLf/iHrev9RRHxF0mzIFpyXdCCwDHgh0AFs\nAaYArwZ+DaxK2wE+HxE/L7tSPajFmMA84LPAC0oVSAMoZwCMGzeuSmE1jvU7yttuZpUXEQ8Bh3ex\n/dKin58Euloa8Tayde/7XVWTgKSZwNqIWC7pxFLlImI+MB9gyuTJ0Tp6NO1btgDQOnr0nnITpk/n\nKeDlJ8Hyz5U3QHz0tGllx18JixcvBqCtra3frvH11bewZsO2vbaPHzOStrY3VeQa1ahHtTRKXRql\nHlDDugwBDqzuJWut2mMCxwFvk/QIcBXwJklX9PZk+50EI4HdN1UougZxzsmTGTGk5XnbRgxp4ZyT\nJ9coIjMbqKqaBCJiTkS0RsQE4DTgloh4b69ONm8ezID9aJh5nCpm1pHj+eo7XsX4MSMQMH7MCL76\njlcx68h+edfEzOpY3b4nMGrJEvhI9ljvs7UOZgCadeR43/TNyjUIGN1jqYZSsyQQEUuBpb09fhzA\naGiZCNt3djWuYmZmPanbaSO2ArsOBGYACxbUNhgzszpVt0lgEzD4QeD6WkdiZg2jhaw7KM+nQdRt\nEtje2grXw4MeFTYz67W6TQIsWMDuf4eNXlDGzKzX6vbpIIAN4AVlzKxyWoAxtQ6iuuq3JQCsL/ww\nb14twzAzq1t1nQQ2pz+HLenTjNRmZk2rrruDOtJ4wHBge21DMbMGEINg1/BaR1Fddd0SKBha6wDM\nzOpUXSeBQakb6Jkax2FmDUJZSyDPJ9fpcqyiKOk1knZJelfRtk9JukfS3ZJ+LKnf2id1nQQKCxJs\nbfW0EWY2IHW7iqKkFuBrwI1F28YDnwSmRsQryZ5ZOq2/AqzrJLDxoouyH/yYqJkNMGkVxbcAl3VT\n7BNk6wiv7bR9MDBC0mCyGfMf75cgqfOBYZYuzT4rV3r+IDPrszIHhsdKWlb0fX5aEKug21UU02/8\nbwfeCLxmTwwRayRdBDwKbANujIgbuzpHJdR1Ehi1ZAmDgV1kE8qZmVXRulJrDOdcRXEe8LmI6MjW\nld9z7L5AGzCR7J3Yn0p6b0T0egGu7tR1EiiMBby8vZ37ahyLmVmRwiqKp5I9xf5CSVd0WkRrKnBV\nSgBjgVMl7SJb5PLhiHgKQNJC4PWAk8BeUhfQqGum1zYOM2sIHYNg+8i+nyci5gBzAFJL4OzOqyhG\nxMTCz5IWAEsiYpGk1wLHShpJ1h00DSjudqqouh4Y3uP4WgdgZtYzSbMlze6uTETcDlwN3AmsIrtP\nz+/umL6o75ZAwZPAAbUOwsxsb8WrKEbEpSXKfLDT9/OA8/o5NKBBksDWzwA31zoKM6t3HYItDXFX\nzK8huoO8royZNTtJo9LLZ2VpiCRgZtZsJA2S9LeSfiZpLXAf8ISkeyVdKGlSnvM0WcPHzKy03fXV\nHfQrso7wOcDdEdEBIOlFZC+gfU3StT29X1A/1e3G9sL0EWZmzWN6ROzsvDEiniabiuIaSUN6OklD\nJAGOOKLWEZhZA+igrloCtwNHdVegqyTRWUOMCQya7pfFzKzpqOciPaufnNeNIXhlMTNrOuMkfbrU\nzoj4Rp6TNEQSMDOrhJ2CJ+vnrtgCjKaPLYL6qW43vMawmTWhJyLiS309SUOMCexb6wDMzKrPYwIF\n62sdgJk1hG3A3bUOIr9pAJI+FBGXF++QdEFEnJvnJA2RBDbe7ImDzKy5pPcBAN4p6dmIuBJA0rfI\neslzaYgkYGY20EgaDtwKDCO7116dZgctLrMP2WIxh6QyF0XE94r2t5CtJbAmImaWuNQ7geskdQAz\ngA0R8aG8cToJmJklFe4O2g68KSK2pDd3b5P0i4j4fVGZjwH3RsRbJY0D7pd0ZUTsSPvPBFYDL+x8\n8jQ9RMGHgUXAb4AvSnpRUUuhWw0xMLyXefNqHYGZNbnIbElfh6RPdC4GvEDZGpOjgafJlk1HUivw\nFuCyEpdYTtZKWE42j9CYVL6wPZeqtgTyNI8qYdiSJWw/66xKn7buLVqxhgtvuJ/HN2zjxWNGcM7J\nk5l15Phah2U2YGwh+1U6p7GSim+28yPieSuApe6c5cAk4Ftp1bBi3wSuAx4HXgC8uzARHNlC9J9N\n2/dSvDxlX1S7OyhP86jP/N7A3hatWMOchavYtnM3AGs2bGPOwlUATgRmvbMuIqZ2VyAidgNHSBoD\nXCvplRFR3ON0MrASeBPwUuAmSb8GTgDWRsTytEbxXiQdHxG3lbq2pBcCh3S63t7lIjq3TqojLaJ8\nG/DRLrLjHpMmTYq5c+dWL7AGdf7yFtbv2Pux4n2HBucfvbsGEZlV1qxZs5b3dFPuydCpigNzdqQ8\nJsq6nqQvAM9ExEVF234GXBARv07fbwHOBd4OvI+sa2g42ZjAwuLF6iX9f+C1wPVkrY2nUtlJZFNJ\nHwp8JiLu6C6uqg8M52geIekM4AyAcePGVTfABrV+R3nbzZrRTuCxCv1OlAZ6d0bEBkkjgJOAr3Uq\n9ijZ8/6/lnQAMBl4KCLmkK0TQGoJnF2cAAAi4lNpcPidwN8AB5GNba8Gvt1dK6FY1ZNAjuYRqV9t\nPsCUyZOjdfRo2rdk4yuto0f3eI0J06fzSA/vDhw9bVrvKtBHixcvBqCtra2q1/366ltYs2HbXtvH\njxlJW9ubyj5frerRHxqlLo1SD2iYuhwEfD/94jsI+ElELJE0G/YsOv9lYIGkVWRvAH8uItblvUB6\nAug76dMrNXtENGXHX5E911rRl/RyvyXRRM45efLzxgQARgxp4ZyTJ9cwKrPGFRF3AUd2sf3Sop8f\nB97cw3mWAksrHN4e1X46KE/zqM+eqPQJG0Bh8NdPB5l1owN4ttZBVFe1WwJdNo8qfZGNra2VPmVD\nmHXkeN/0zex5qpoESjWPKs7vCJhZk5C0HPgu8KOIKHs+Tb8xbGZWUOgOyvMZON4NvBi4Q9JVkk5O\nbyDnUtEkIGlAzEU0rL291iGYmVVFRDwYEf8IvAz4EVmr4M+SvthpfqEulZUEJH22m32DgZ+Uc77+\nstdMS2ZmDUzSq4G5wIXANWTvDWwCbunp2HJ/c/+ypCci4oedAhgEXEX2lpqZWX3qAJ6pdRDlSWMC\nG4DLgXMjojBrzu2Sjuvp+HKTwGzgO5KeiojrUwCFBHAS2TwYNVdn/4ZmZn3xNxHxUFc7IuIdPR1c\nVhKIiO9JOgj4qaRpwB1kfVAzgBmVngiut/Z+L9bMLIdgoA365jGri3HgjcDyiFjZ08FlD+RGxL+k\nRPAz4Ldks9+dEhG/Lfdc/aXjoot6LmRm1himps9/pu8zgbuA2ZJ+GhFf7+7g3j7N80lgf+BU4C15\nJyqqmiOOqHUEZmbV0gocVVjARtJ5ZL+kn0A2WWffkoCkx9h7NZzCsYOAK4qaIhERh+YO3cxsIKnP\naSP25/lLqOwEDoiIbZJ6XFolT0vgl3SdBMzMrPauJHsSaHH6/lbgR5JGAff2dHCPSSAiPtin8MzM\nmlCe5XQlnQ58jmwa6c1ki2z9d9o3A7gYaAEui4gLurpORHxZ0i+AwuOgsyOisDTO6T3FOSDe8DUz\nGxA6gK0VO1ue5XQfBt4QEeslnUK2jspr0ySb3yJ79L6dbEqI6yLieb/Zp3L3RMTLKWNx+WJlJ4G0\nbuWpwCHsPXV/RMSXexOImVkjiWzt3i3p65D0iU5lip+q/D3ZIC/AMcCDhef/JV0FtNGpeycidku6\nX9IhEfFob+IsKwmkt8/+ExhTokiQrZRjZtboxkoq/u17floVcY88y+kW+RDwi/TzeOCxon3tZOsJ\nd2Vf4B5Jf6CoHRMRb8tTiXJbAvOAR4CPAKsiwivUmlnjKO/poHU9LTSfZzldAElvJEsCx5cXMAD/\n1Itj9ig3CbwC+D8RsbwvFzUzaybdLaebJn+7jOyl27+kzWuAg4uKtaZtXZ37vyQdChwWETdLGkk2\nmJxLuVNJP0o20m1mZt2QNC61AChaTve+TmUOARYC74uIB4p23QEcJmmipKHAacB1Ja7zEeBq4Ntp\n03hgUd44y20JfBE4V9IvI2JTmceamQ1slZ07qMvldCXNhj0Lzn8B2A+4JL10uysipkbELkkfB24g\n+63+uxFxT4nrfIxsIPn2dN4/Sto/b5DlJoGZwAHAw5J+BzzdaX9ExAfKPKeZWcMptZxuuvkXfv4w\n8OESx/8c+HmOS22PiB2FmRvS2i65X/AtNwkcn06+CfirLvbX7s3iwpKSXl/YzHqrPqeN+C9JnwdG\nSDoJ+Aeem0yuR+VOJT2xzOCqZtCSJQB0OAmYWXM5l+zJolXA/yVrPVyW9+CGeWP4BenPjTWNwsys\nuiKiA/hO+pSt10kgDTx0fmOY3r61VgkH4SRgZn1Q2WkjqiK9xHs+cCjZPV1k47MvyXN8uW8MDwL+\nmazJUeqt4dzPp1bSZmDS4h6LmZk1msuBT5G9mby73IPLfU/gLLLHkeaSZZt/IUsKDwN/InuTuCY6\nZs58btYNM7PmsTEifhERayPiL4VP3oPLTQJ/B3wJ+Fr6fm2aGvUVZG+zHVLm+SrHA8Jm1leFp4Py\nfAaOX0m6UNLrJB1V+OQ9uNwxgZcAy9LMdbuAEQARsVPSPODfyPqmamNDza5sZlYrhYnliucxCrL1\n33tUbhLYCIxKPz8OTAZ+U3SuF5V5PjMz64OIeGNfji83CawAppA9h3oD8EVJ24BdwFeAO/sSjJlZ\nbbVAlHrmpbPc3e79StIBZOOzL46IUyRNAV4XEZfnOb7cMYF5ZG8LA5wHPEm2vuV/kC2Y8PEyz2dm\nZn2zgOyX8hen7w+QPcSTS+4kkGay+wfSLHgR8STZpEUvA44AXpbmyjAzs+oZGxE/IRvWJiJ2Ucaj\norm7g9IERdPJFj4ubAvgwfyxmpkNYBoBQ6fkLPzrfg2lDFsl7Ueau03SsZTx3my53UG/AY4t8xgz\ns6Yj6WBJv5J0r6R7JJ3ZRZkTJW2UtDJ9vlC0b4ykqyXdJ2m1pNeVuNSnydYaeKmk3wA/AD6RN85y\nB4Y/AyyStIVs0YIn2Hvh5I4yz1k5T5JNdG1m1hsaCoMn5CzcY0tgF/CZiLhT0guA5ZJuioh7O5X7\ndUTM7OL4i4HrI+JdqTt+ZFcXSed/A9nTmgLuj4idOStRdktgFfDSFNyfgR3AzqJPTdcc3n16La9u\nZvaciHgiIu5MP28GVpOt+tUjSfsAJ5BNCUFE7IiIkm9CRcSuiLgnIu4uJwFA+S2BL9GHNQMkHUzW\nVDkgnWd+RFzc/VH5PVypEzWZRSvWcOEN9/P4hm28eMwIzjl5MrOOzPXfqpnlIGkC2QIzt3ex+/WS\n7iKbdeHstILYROAp4HuSDiebF+jMiKj49Hblridwfh+vl7d51CsbZ3bVorLuLFqxhjkLV7FtZ/Yw\nwZoN25izcBWAE4E1Hw0rozuIsZKWFX2fHxHz9zqlNBq4Bjiri2V57wQOiYgtkk4l62Y/jOzefBTw\niYi4XdLFZOsG/FNZ9clB2QM+tSFpMfDNiLipVJlJkybF3LlzqxhVczl/eQvrd2iv7fsODc4/uuwJ\nCc1qZtasWcsjYmrPJUvTS18cfLXL1R739u4v93g9SUOAJcANEfGNHq8vPUI2/cNg4PcRMSFt/2vg\n3Ih4SxfHCDgdeElEfCktXn9gRPwhTzXKHROomO6aR5LOkLRM0rJNm7yefX9aX2IUp9R2M8sn3Zwv\nB1aXSgCSDkzlkHQM2T35L+k9rMckTU5FpwGlekwuAV4HvCd93wx8K2+cNVlZrIfmEalJNR9gyuTJ\n0Tp6NO1btgDQOnp0l+ccNn0622++OXcMR0+bVn7gFbB4cbboQVtbW02u39nXV9/Cmg3b9to+fsxI\n2tpKzz810OrRF41Sl0apB9SyLi2gvNNG9Og44H3AKkkr07bPk2ZbTgvOvwv4aJqQcxtwWjzXPfMJ\n4Mr0ZNBDZLM4d+W1EXGUpBXpvOvTMblUPQmk5tE1wJURsbBS5x0MbK/UyZrIOSdPft6YAMCIIS2c\nc/Lkbo4ys55ExG1kj2x2V+abwDdL7FvJ82cGLWWnpBaee1lsHOnt4TyqmgTyNI96q2EWS66ywuCv\nnw4yq1v/ClwLHCDpK2Sti/+X9+Bq3zu7bB5FxM/7euKBtcZDfZl15Hjf9M2ArEt+VI+lBpKIuFLS\ncrJxAwGzImJ13uOrmgTyNI96a3ur15Y0s6Y1FngmIr4naZykiRGR69WpxulF8fKSZtZng4DhtQ6i\nLJLOIxs7mAx8j2xa/yvIel56VLNHRM3MrCLeDrwN2AoQEY8DL8h7cMMkgWFnn13rEMzMamFHeqy0\n8HRQWYMaDdMddBDwSK2DMLM6V3/dQcBPJH0bGCPpI8DfA9/Je3DDJIH9JjoJmFnziYiLJJ1EtvTv\nZOAL3U3F01nDJAEzs2aTXhK7OSLeCOS+8RdrmCSw2/NIm1lfRQvs2qfWUeQWEbsldUjaJyJyLylZ\nrGGSwB9rHYCZWW1sIXsB9ybSE0IAEfHJPAc3TBLYWsbkcWZmDWRh+vRKwyQBM7M+i0Gwq+uZigca\nSYdExKMR8f2+nKdh3hMwM2syiwo/SLqmtydxEjAz6weSvitpraS7S+zfV9K1ku6S9AdJr0zbD5b0\nK0n3SrpH0pmlLlH080t6G6eTgJlZQaE7KM+nZwuAGd3s/zywMiJeDbwfuDhtL6zFPgU4FviYpCld\nRVvi57I4CZiZ9YOIuBV4upsiU4BbUtn7gAmSDoiIJyLizrR9M7Aa6Gqu98MlbZK0GXh1+nmTpM2S\ncq/L64FhM7M9WsoZGB4raVnR9/lpady8/ht4B/DrtL7woUAr8D+FAt2txR4RLWVcqyQnATOz3lkX\nEXmWfyzlAuDitMDWKmAFsGed157WYq8UJwEzsxpIN/a/gz1L7z5MtqB8v63F3hUnATOzgg7gmeoM\nlUoaQ7Ya2A7gw8CtEbGpP9di74qTgJlZP5D0Y+BEsrGDduA8slW/iIhLgVcA35cUwD3Ah9Kh/bYW\ne1ecBMzM+kFEvKeH/b8DXtbF9n5bi70rTgJmZgUdwLO1DqK6/J6AmVkTcxIwM2ti7g4yMytwd5CZ\nmTUTJwEzsybm7iAzs4LA3UFmZtY83BIwMyvYDjxY6yCqyy0BM7Mm5iRgZtbE3B1kZlawA2ivdRDV\n5ZaAmVkTcxIwM+sHkr4raa2ku0vsP13SXZJWSfqtpMOL9n1K0j2S7pb0Y0nD+yvOqiaBnv5SzMwW\nrVjD+ctbOPN3LRx3wS0sWrGmehcvdAfl+fRsATCjm/0PA2+IiFcBXwbmA0gaD3wSmBoRrwRagNPK\nrktO1W4JLKD7vxQza2KLVqxhzsJVrN8hQKzZsI05C1dVNxFUSETcCjzdzf7fRsT69PX3ZIvMFwwG\nRkgaDIwEHu+vOBUR/XXuri8oTQCWpAzXo0mTJsXcuXP7NSYzGxjOX96SEsDz7Ts0OP/o3V0c8ZxZ\ns2Yt7+PC72joq4IDFucr3P7SPwPrirbMj4j5zztfzvudpLOBl0fEh9P3M4GvANuAGyPi9JxVKNuA\nfDpI0hnAGQDjxo2rcTRmVi3rd5S3veJ2BrTvylt6XV+TDoCkN5ItLXl8+r4v0AZMBDYAP5X03oi4\noq/X6sqATAIpm84HmDJ5crSOHk37li0AtI4eXZFrHD1tWkXOU67Fi7PfMtra2mpy/UpplHpA49Sl\nEerx9dW3sGbDtr22jx8zkra2N9Ugov4l6dXAZcApEfGXtHk68HBEPJXKLAReD/RLEvDTQWY2YJxz\n8mRGDGl53rYRQ1o45+TJVYqgA9iS89M3kg4BFgLvi4gHinY9ChwraaQkAdOA1X2+YAkDsiVgZs1p\n1pHjAfjitStYvyNrAZxz8uQ92+uJpB8DJwJjJbUD5wFDACLiUuALwH7AJdm9nl0RMTUibpd0NXAn\nsAtYQeoZ6Q9VTQJd/aVExOXVjMHMBrZZR45Hjy4DqOsuoIh4Tw/7Pwx8uMS+88iSRr+rahLo6S/F\nzKy2Ct1BzcNjAmZmTcxJwMysiXlg2Mxsj924O8jMzJqGk4CZWRNzd5CZWTKIDkaxOVfZfKUGPrcE\nzMyamJOAmVkTc3eQmVkyjGAC+WYRXdXPsVSLWwJmZk3MLQEzs2SoWwJmZtZMnATMzPqJpBmS7pf0\noKRzS5Q5UdJKSfdI+q9O+1okrZC0pL9idHeQmVkyguCv2Jmr7H/2sF9SC/At4CSgHbhD0nURcW9R\nmTHAJcCMiHhU0v6dTnMm2YIyL8xZhbK5JWBm1j+OAR6MiIciYgdwFdnawcX+FlgYEY8CRMTawg5J\nrcBbyJaf7DdOAmZmvTNW0rKizxmd9o8HHiv63p62FXsZsK+kpZKWS3p/0b55wGfJFjnoN+4OMjNL\nWghemPPpIGBdREzt4yUHA0eTrSM8AvidpN+TJYe1EbFc0ol9vEaPAZiZWeWtAQ4u+t6athVrB/4S\nEVuBrZJuBQ4HjgLeJulUYDjwQklXRMR7Kx2ku4PMzPrHHcBhkiZKGgqcBlzXqcxi4HhJgyWNBF4L\nrI6IORHRGhET0nG39EcCALcEzMz2CIJd+buDuj9XxC5JHwduAFqA70bEPZJmp/2XRsRqSdcDd5H1\n/V8WEXdXJICcnATMzPpJRPwc+HmnbZd2+n4hcGE351gKLO2H8AB3B5mZNTW3BMzMkkp2B9ULtwTM\nzJqYWwJmZkkQ7Mw5bUSjcEvAzKyJOQmYmTUxdweZmSW72MXTPFXrMKrKLQEzsybmJGBm1sTcHWRm\nluxkB+21ZSKDAAAHv0lEQVQ8UuswqsotATOzJuYkYGbWxNwdZGaWPMs2HuDengs2ELcEzMyaWNWT\ngKQZku6X9KCkc6t9fTOzaunpfqfMv6b9d0k6Ku+xlVLV7iBJLcC3gJPIllW7Q9J1EdFc7S8zG5B2\nVPDpoJz3u1OAw9LntcC/A6+t5r2y2mMCxwAPRsRDAJKuAtqgdCfcjt27ad+yZc/34p/7on3x4oqc\np7cW1/j6ldIo9YDGqUuj1APqvi557ndtwA8iIoDfSxoj6SBgQo5jK6LaSWA88FjR93ay7Pc8ks4A\nzkhft8yaNev+9PNYYF2/RlgdrsfA0yh1aZR6QPl1ObSvFww6btjG1rE5iw+XtKzo+/yImF/0Pc/9\nrqsy43MeWxED8umg9Bc5v/N2ScsiYmoNQqoo12PgaZS6NEo9oDZ1iYgZ1bzeQFDtJLAGOLjoe2va\nZmbWaPLc70qVGZLj2Iqo9tNBdwCHSZooaShwGnBdlWMwM6uGPPe764D3p6eEjgU2RsQTOY+tiKq2\nBCJil6SPAzcALcB3I+KeMk6xVxdRnXI9Bp5GqUuj1APqvC6l7neSZqf9lwI/B04FHgSeAf6uu2P7\nI05lg9JmZtaM/MawmVkTcxIwM2tidZEE6nWqCUkHS/qVpHsl3SPpzLT9RZJukvTH9Oe+tY41L0kt\nklZIWpK+111d0gs5V0u6T9JqSa+rx3oASPpU+m/rbkk/ljS8Huoi6buS1kq6u2hbybglzUn//98v\n6eTaRN2YBnwSKHp9+hRgCvAeSVNqG1Vuu4DPRMQU4FjgYyn2c4FfRsRhwC/T93pxJrC66Hs91uVi\n4PqIeDlwOFl96q4eksYDnwSmRsQryQYQT6M+6rIA6PxMfpdxp/9nTgP+Kh1zSbovWAUM+CRA0avX\nEbEDKLw+PeBFxBMRcWf6eTPZzWY8WfzfT8W+D8yqTYTlkdQKvAW4rGhzXdVF0j7ACcDlABGxIyI2\nUGf1KDIYGCFpMDASeJw6qEtE3Ao83WlzqbjbgKsiYntEPEz2JM0xVQm0CdRDEij1WnVdkTQBOBK4\nHTggPQsM8CRwQI3CKtc84LNAR9G2eqvLROAp4HupW+sySaOov3oQEWuAi4BHgSfInjG/kTqsS1Iq\n7oa4BwxU9ZAE6p6k0cA1wFkRsal4X5o4asA/pytpJrA2IpaXKlMndRkMHAX8e0QcCWylU3dJndSD\n1GfeRpbYXgyMkvTe4jL1UpfO6jXuelQPSaCup5qQNIQsAVwZEQvT5v9JMwWS/lxbq/jKcBzwNkmP\nkHXJvUnSFdRfXdqB9oi4PX2/miwp1Fs9AKYDD0fEUxGxE1gIvJ76rAuUjruu7wEDXT0kgbqdakKS\nyPqeV0fEN4p2XQd8IP38AWDAz5cbEXMiojUiJpD9G9wSEe+lzuoSEU8Cj0manDZNI5uet67qkTwK\nHCtpZPpvbRrZuFM91gVKx30dcJqkYZImks29/4caxNeYImLAf8heq34A+BPwj7WOp4y4jydr0t4F\nrEyfU4H9yJ5++CNwM/CiWsdaZr1OBJakn+uuLsARwLL077II2Lce65Hq8kXgPuBu4IfAsHqoC/Bj\nsnGMnWStsw91Fzfwj+n///uBU2odfyN9PG2EmVkTq4fuIDMz6ydOAmZmTcxJwMysiTkJmJk1MScB\nM7Mm5iRgZtbEnATMzJqYk4A1PEnDah2D2UDlJGBVIellkq5NC4k8K+lRST9NUyAjaZykSyQ9Jml7\n+vOHxTfwtLjQ7yRtk7RR0qKi6R8KZZZKuk3SW9MsoduBf0j7BqfFSe5L13hc0lxJw6v6l2E2gAyu\ndQDWNH4GrAc+Cqwjmwr4VGBQmg3zt8CLgH8mm85hf7IZMocC2yXNSOe4BXg3MBr4EnCbpCMim1a5\n4GXAvwJfBh7iuXnrrwDeCnwtXe8VqcwE4J39UWmzgc7TRli/kzSWbA7/tojYa/I/SV8imxtmakSs\nKHGOZcA+wCsiYlfaNpFsTql/i4hPp21LyRaNOSoiVhYd/9fArcAHIuIHRdtPJ0sORxaXN2sW7g6y\navgL2W/kF0j6iKTDOu1/M3BHNwlgFNl0z/9RSAAAka0y9RvgDZ0OeaSLG/oMYAdwdeoWGpy6om5M\n+0/oTcXM6p2TgPW7yJqbJ5HN3PlV4AFJD0n6aCqyH9lMkqXsC4hs1snOniTrRirWVbn9ybqWtpLN\nXFn4FOas36/nmpg1Ho8JWFVExEPA+9O894cDHydbMPwRnhsjKGU92ZTcB3ax70D2Xqu2qz7OvwDP\nAn9d4hqPd3N9s4blloBVVWRWAp9Om15J1iVzjKTDSxyzFVgO/I2klsJ2SYeSraS1NMelrweGA/tE\nxLIuPk4C1pQ8MGz9TtKrgYuB/wAeBFqADwLvAo4lWyzkDmAM2dNBq4CxZE8HzY6IzUVPB90IXEL2\ndNAXybqKDi/cxNPA8OCIOL6LOH4EnAJ8g2xlqg6yJ4NOBT4XEQ9UvPJmA5y7g6waniRbCvHTZOvD\nPkt2o58ZaeF6SceRJYBzyfrn/4fscdAdABFxvaS3AOcBP0nblwKfLeO3+PcCnwD+nuxppO3AI8AN\n6XpmTcctATOzJuYxATOzJuYkYGbWxJwEzMyamJOAmVkTcxIwM2tiTgJmZk3MScDMrIk5CZiZNbH/\nBQY14gETa+0+AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda443fa390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "runnumber=1\n",
    "for n_clusters1 in n_cluster_pos:\n",
    "\n",
    "    #Cluster the data\n",
    "    clustering_class=MSM_bind.Cluster_data(traj_list, input_pdb=input_pdb1, lagtime=lagtime1, n_clusters=n_clusters1, coordinates='heteroatom', visual=True)\n",
    "    clustering_class.get_coordinates()\n",
    "    clustering_dict=clustering_class.clustering()\n",
    "\n",
    "    #Remove small cluster and sort into bound and unbound cluster \n",
    "    sorted_clusters=MSM_bind.sort_cluster(clustering_class)\n",
    "    sorted_clusters.remove_small_clusters()\n",
    "    lesscluster=sorted_clusters.assign_bound_unbound()\n",
    "\n",
    "    for lagtime in lagtime_pos:\n",
    "        #build a simple MSM model\n",
    "        m=MSM_bind.simple_MSM(clustering_class, lesscluster, out_data=out_data1, lagtime=lagtime1)\n",
    "        m.create_MSM()\n",
    "        m.get_highest_populated()\n",
    "        \n",
    "        #do kinetic clusering \n",
    "        kinetic_lumping=MSM_bind.Kinetic_clustering(m, out_data=out_data1, PCCA_exclusion_value=0.0, nstates_cg=10)\n",
    "\n",
    "        #for maxtrace method\n",
    "        #kinetic_lumping.maxtrace_states()\n",
    "\n",
    "        #for PCCA method\n",
    "        kinetic_lumping.PCCA_states()\n",
    "\n",
    "        #select the states that are found in the highest ranked states and are small\n",
    "        kinetic_lumping.lump_cluster_max_small()\n",
    "        #use an additional restraint on the structure similarity\n",
    "        kinetic_lumping.similarity_restraint()\n",
    "        #lump the states together to get a new trajectory\n",
    "        kinetic_dtraj=kinetic_lumping.lump_states()\n",
    "        \n",
    "        # build a new MSM based on the clustered trajectory\n",
    "        m_kin=MSM_bind.simple_MSM(clustering_class, kinetic_dtraj, out_data=out_data1, lagtime=40)\n",
    "        m_kin.create_MSM()\n",
    "        m_kin.get_highest_populated()\n",
    "\n",
    "        if compare_results:\n",
    "            # test with rmsd\n",
    "            Testing_mod_kin=MSM_bind.Test_the_model(reference1, m_kin.structure_list )\n",
    "            Testing_mod_kin.compare_to_reference(out_data=out_data1, reference=reference1)\n",
    "        \n",
    "        #get the quality control ranking\n",
    "        list_of_representatives_kin=m_kin.structure_list\n",
    "\n",
    "        quality_scoring_kin=MSM_bind.Scoring(list_of_representatives_kin, out_data=out_data1, traj_list=traj_list,)\n",
    "        quality_scoring_kin.quality_score()\n",
    "\n",
    "\n",
    "        # plot the scoring \n",
    "        out_sec=MSM_bind.output_section(  out_data=out_data1, input_pdb=input_pdb1,)\n",
    "        #after this call the plotting function\n",
    "        out_sec.plot_ranking(quality_scoring_kin.rank_quality_control,m_kin)\n",
    "\n",
    "        # bootstrapping\n",
    "        boot.compare_top_results(out_sec, runnumber)\n",
    "        runnumber=runnumber+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\noQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda44a83e90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calculate the std error of the rmsd and the score and plot the results\n",
    "\n",
    "boot.bootstrap_mean_std(runnumber)\n",
    "boot.bootstrap_plot_results(modus='std_err')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Estimation of simulation uncertainty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#initilze bootstrapping\n",
    "if compare_results:\n",
    "    boot2=MSM_bind.integration_and_bootstrapping(out_data=out_data1, reference=reference1)\n",
    "else:\n",
    "    boot2=MSM_bind.integration_and_bootstrapping(out_data=out_data1, reference=None)\n",
    "#define how many bootstrap runs you want to perform \n",
    "n_bootstrap=3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e1a00e4b99cb4dfc89615e552ab35495"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "20cc5318f2f9477fad5032ce60e7addd"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9bc9b0a1671c43b18768b97811636543"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8ca7c7fbbcaa481ea549adad3d934a0e"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6a4bd49a4e7f419a9a2f5509a08de71d"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b7d21e2c66ef4f89809e1a9245a37e9f"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:55:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:55:47 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n",
      "06-11-17 15:55:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_168.pdb\n",
      "06-11-17 15:55:48 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_169.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_26.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_27.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_28.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_29.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_51.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_52.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_53.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_54.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_55.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_74.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_75.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_76.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_77.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_78.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_79.pdb\n",
      "06-11-17 15:55:49 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_88.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_1.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_2.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_3.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_4.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_35.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_36.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_37.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_38.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_39.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_70.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_71.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_72.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_73.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_96.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_97.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_98.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_103.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_104.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_105.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_106.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_107.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_111.pdb\n",
      "06-11-17 15:55:58 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_112.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_138.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_139.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_140.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_141.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_142.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_143.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_144.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_145.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_146.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_147.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_148.pdb\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_162.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_163.pdb\n",
      "06-11-17 15:55:59 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_164.pdb\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:56:41 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nnATMzJrY/wcP3WszKELo3QAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda44a97450>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "75409597b6064bdcb06c6cd927010e82"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2d93e5c21ee54829ae563bc8ddf67f37"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "36d2a231f20148cdb1e5bb51cd707736"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "30cfd0086a254d0289181a83e14ba6d1"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "85e03eb9723e4584917d84e0583dfe6c"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a46857c00c9e42de8bf034a462ca21ba"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:57:08 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:57:08 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:57:08 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:57:08 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:57:08 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:57:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:57:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:57:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:57:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:57:09 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n",
      "06-11-17 15:57:10 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_168.pdb\n",
      "06-11-17 15:57:10 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_169.pdb\n",
      "06-11-17 15:57:10 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_26.pdb\n",
      "06-11-17 15:57:10 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_27.pdb\n",
      "06-11-17 15:57:10 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_28.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_29.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_51.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_52.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_53.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_54.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_55.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_74.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_75.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_76.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_77.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_78.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_79.pdb\n",
      "06-11-17 15:57:11 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_88.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_1.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_2.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_3.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_4.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_35.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_36.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_37.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_38.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_39.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_70.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_71.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_72.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_73.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_96.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_97.pdb\n",
      "06-11-17 15:57:20 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_98.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_103.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_104.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_105.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_106.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_107.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_111.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_112.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_138.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_139.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_140.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_141.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_142.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_143.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_144.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_145.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_146.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_147.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_148.pdb\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_162.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_163.pdb\n",
      "06-11-17 15:57:21 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_164.pdb\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:58:05 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda47fb0610>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fd22c66e35004a43bc48064f0379d612"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "45af2579527c4db392339b3e26c487f1"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c551ea54623e47158751059cd84d06d9"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "08f53c2aae0843458f540f7de7d970a6"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5db698a84bf148a9aa8a78ee4f5e8994"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Widget Javascript not detected.  It may not be installed or enabled properly.\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b795a92e27a34990b7b4e5b1b055f517"
      }
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:58:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:58:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:58:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:58:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:58:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:58:33 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:58:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:58:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:58:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:58:34 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_168.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_169.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_26.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_27.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_28.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_29.pdb\n",
      "06-11-17 15:58:36 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_51.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_52.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_53.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_54.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_55.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_74.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_75.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_77.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_78.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_79.pdb\n",
      "06-11-17 15:58:37 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_88.pdb\n",
      "06-11-17 15:58:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_1.pdb\n",
      "06-11-17 15:58:44 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_2.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_3.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_4.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_35.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_36.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_37.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_38.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_39.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_70.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_71.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_72.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_73.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_96.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_97.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_98.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_103.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_104.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_105.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_106.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_107.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_112.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_138.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_139.pdb\n",
      "06-11-17 15:58:45 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_140.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_141.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_142.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_143.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_144.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_145.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_146.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_147.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_148.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_162.pdb\n",
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_163.pdb\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "06-11-17 15:58:46 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/kinetic_clustering_centroid_164.pdb\n",
      "06-11-17 15:59:28 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_1.xtc\n",
      "06-11-17 15:59:28 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_1.pdb\n",
      "06-11-17 15:59:28 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_2.xtc\n",
      "06-11-17 15:59:28 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_2.pdb\n",
      "06-11-17 15:59:28 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_3.xtc\n",
      "06-11-17 15:59:29 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_3.pdb\n",
      "06-11-17 15:59:29 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_4.xtc\n",
      "06-11-17 15:59:29 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_4.pdb\n",
      "06-11-17 15:59:29 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_msm_most_rank_5.xtc\n",
      "06-11-17 15:59:29 pyemma.coordinates.api INFO     Created file /home/tb/stlinker/tutorial/out_data/simple_MSM_centroid_rank_5.pdb\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n7AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda4434e810>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "runnumber=1\n",
    "while runnumber <= n_bootstrap:\n",
    "  \n",
    "    #bootstrapping over the simulation data\n",
    "    #is is important that simulations were loaded first\n",
    "    bootstrap_traj=load_data.bootstrap_data()\n",
    "\n",
    "    #Cluster the data\n",
    "    clustering_class=MSM_bind.Cluster_data(traj_list, input_pdb=input_pdb1, lagtime=lagtime1, n_clusters=n_clusters1, coordinates='heteroatom', visual=True)\n",
    "    clustering_class.get_coordinates()\n",
    "    clustering_dict=clustering_class.clustering()\n",
    "\n",
    "    #Remove small cluster and sort into bound and unbound cluster \n",
    "    sorted_clusters=MSM_bind.sort_cluster(clustering_class)\n",
    "    sorted_clusters.remove_small_clusters()\n",
    "    lesscluster=sorted_clusters.assign_bound_unbound()\n",
    "\n",
    "    #build a simple MSM model\n",
    "    m=MSM_bind.simple_MSM(clustering_class, lesscluster, out_data=out_data1, lagtime=lagtime1)\n",
    "    m.create_MSM()\n",
    "    m.get_highest_populated()\n",
    "        \n",
    "    #do kinetic clusering \n",
    "    kinetic_lumping=MSM_bind.Kinetic_clustering(m, out_data=out_data1, PCCA_exclusion_value=0.0, nstates_cg=10)\n",
    "\n",
    "    #for maxtrace method\n",
    "    #kinetic_lumping.maxtrace_states()\n",
    "\n",
    "    #for PCCA method\n",
    "    kinetic_lumping.PCCA_states()\n",
    "\n",
    "    #select the states that are found in the highest ranked states and are small\n",
    "    kinetic_lumping.lump_cluster_max_small()\n",
    "    #use an additional restraint on the structure similarity\n",
    "    kinetic_lumping.similarity_restraint()\n",
    "    #lump the states together to get a new trajectory\n",
    "    kinetic_dtraj=kinetic_lumping.lump_states()\n",
    "        \n",
    "    # build a new MSM based on the clustered trajectory\n",
    "    m_kin=MSM_bind.simple_MSM(clustering_class, kinetic_dtraj, out_data=out_data1, lagtime=40)\n",
    "    m_kin.create_MSM()\n",
    "    m_kin.get_highest_populated()\n",
    "    \n",
    "    if compare_results:\n",
    "        # test with rmsd\n",
    "        Testing_mod_kin=MSM_bind.Test_the_model(reference1, m_kin.structure_list )\n",
    "        Testing_mod_kin.compare_to_reference(out_data=out_data1, reference=reference1)\n",
    "            \n",
    "\n",
    "    #get the quality control ranking\n",
    "    list_of_representatives_kin=m_kin.structure_list\n",
    "\n",
    "    quality_scoring_kin=MSM_bind.Scoring(list_of_representatives_kin, out_data=out_data1, traj_list=traj_list,)\n",
    "    quality_scoring_kin.quality_score()\n",
    "\n",
    "\n",
    "    # plot the scoring \n",
    "    out_sec=MSM_bind.output_section(  out_data=out_data1, input_pdb=input_pdb1,)\n",
    "    #after this call the plotting function\n",
    "    out_sec.plot_ranking(quality_scoring_kin.rank_quality_control,m_kin)\n",
    "\n",
    "    # bootstrapping\n",
    "    boot2.compare_top_results(out_sec, runnumber)\n",
    "    runnumber=runnumber+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nVQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7fda44462e10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "boot2.bootstrap_mean_std(runnumber)\n",
    "boot2.bootstrap_plot_results(modus='std_err')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  },
  "widgets": {
   "state": {
    "0a083c1dfb844bbe823f5f7a80d0ee9e": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "19958ae54fc049e38b9a60c8845f165f": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "1bba4b45e57942e9aa4ff9c7da4ed3d9": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "20db97b3e6594e4cb0f5274ed7e92774": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "33738650567e415bb73084f252e928d5": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "3de1448bc41b4c0dbf7e2bcc4b3f34b3": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "41f96e35d9234f148000dbee41335737": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "59a77d3a90b549a88fd4a684fa84f5f6": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "5ee45a7ba711470ab52827eca61a746c": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "6093ee8c14e7455ab3bda371b96599ec": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "7164c0ee22574d089600d3401007d14a": {
     "views": [
      {
       "cell_index": 20
      }
     ]
    },
    "7c98c0a8f7ce42a0b3ebf0da899b5ae6": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "aff926f56760462e91190bbc1542a5bc": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "b12bf9d7393047ad83b13a59e7fbafe6": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "ba464282ca774dc39fd90a6b6e763417": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "ba98cb9c7ba54315bb5484bc6eff6c9d": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "d8804f92e8be4b93ae000b4f14465b16": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "e06e7c514c0944ce8a6ffd631bce6086": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    },
    "f4c151871eaa481f8e265a111e1c9842": {
     "views": [
      {
       "cell_index": 17
      }
     ]
    }
   },
   "version": "1.2.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
